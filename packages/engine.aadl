-------------------------------------------------
-- Engine component block
--
-- Failure events: stop (lambdaEngine)
-- Inputs: none
-- Outputs: true or false      {* noPower *}
-- States: operative, failed   {* S18_ErrorLibrary::twoState{operative, failed}  *}
-- Transfer function:
--  State (operative) out == true    {* operative, failed  *}
--	state (failed)    out == false
--------------------------------------------------

package engine
public

with dataDictionary;
with ARP4761, EMV2;

system engine
	features
		generatorDC : out data port dataDictionary::DC28VoltRaw;
	flows
		fl1: flow source generatorDC;
	annex EMV2 {**
		use types S18_ErrorLibrary;
		use behavior S18_ErrorLibrary::twoState;
		error propagations
				generatorDC: out propagation {noPower};
			flows
				es1: error source generatorDC{noPower} when failed;  -- engine basic plus accessory drive failures
		end propagations;
		component error behavior
			events
				stop: error event;  -- engine basic failure event
			transitions
				t1: operative -[stop]-> failed;
		end component;
		properties
			emv2::occurrencedistribution => [ probabilityvalue => 0.3 ; Distribution => Fixed;] applies to stop;
			emv2::occurrencedistribution => [ probabilityvalue => 0.31 ; Distribution => Fixed;] applies to failed;
			
			EMV2::severity => ARP4761::Minor applies to failed;
			ARP4761::hazards => 
			([
				description => "Engine shutdown with loss of engine services";
				environment => "All";
				failure => "Engine shutdown";
				failureEffect => "Loss engine services: thurst, bleed air, hydraulic power and electrical power";
				phases => ("Inflight");
				comment => "Single engine shutdown has minor impact on aircraft operation";
			])
			applies to failed;
	**};
end engine;

system implementation engine.item
end engine.item;

end engine;